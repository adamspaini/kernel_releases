name: Build and Release KernelSU Next

on:
  workflow_dispatch:

jobs:
  Kernel:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Cleanup
        run: rm -rf ${{ github.workspace }}/build_output*

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get remove -y gcc-multilib
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev bc ccache lld llvm device-tree-compiler nano ca-certificates curl git libc6-dev openssl python3 python3-pip python-is-python3 ssh wget zip zstd make clang software-properties-common libarchive-tools gcc-13-aarch64-linux-gnu g++-13-aarch64-linux-gnu gcc-13-arm-linux-gnueabi g++-13-arm-linux-gnueabi libffi-dev libreadline-dev libbz2-dev libsqlite3-dev pigz cpio neofetch
          sudo apt-get upgrade -y
          neofetch

      - name: Clone kernel source
        run: git clone https://github.com/adamspaini/kernel_vayu_sm8150_.git -b fiveteen-ksu --depth=1 .

      - name: Clone KernelSU (Next)
        run: |
          git clone https://github.com/tiann/KernelSU --depth=1 -b main KernelSU
          echo "✅ KernelSU clonado"

      - name: Integrate KernelSU to source
        run: |
          # Añadir include al Makefile si no está
          grep -q 'KernelSU/kernel/kernelsu.mk' Makefile || {
            echo '' >> Makefile
            echo '# KernelSU' >> Makefile
            echo 'include \$(srctree)/KernelSU/kernel/kernelsu.mk' >> Makefile
          }

          # Agregar CONFIG_KSU al defconfig si no está
          grep -q 'CONFIG_KSU' arch/arm64/configs/vayu_defconfig || \
            echo 'CONFIG_KSU=y' >> arch/arm64/configs/vayu_defconfig

      - name: Verify CONFIG_KSU is set
        run: |
          make O=out vayu_defconfig
          if ! grep -q 'CONFIG_KSU=y' out/.config; then
            echo "ERROR: CONFIG_KSU=y no está presente en .config"
            echo "Verifica que el Makefile y el defconfig estén correctamente configurados."
            exit 1
          else
            echo "✅ CONFIG_KSU=y detectado correctamente"
          fi

      - name: Setup Swap
        run: |
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon --priority 10 /swapfile

      - name: Start Compilation
        run: bash tools/build/build.sh

      - name: Set-up files
        run: |
          output_dir="${{ github.workspace }}/output"
          mkdir -p "$output_dir"
          echo "Archivos en output/:"
          ls -lh "$output_dir"
          zip_file=$(find "$output_dir" -iname 'GoreKernel_*.zip' -print -quit)
          echo "ZIP_FILE=$zip_file" >> $GITHUB_ENV
          echo "ZIP_NAME=$(basename "$zip_file" .zip)" >> $GITHUB_ENV

      - name: Check ZIP file exists
        run: |
          if [ ! -f "${{ env.ZIP_FILE }}" ]; then
            echo "Archivo ZIP no encontrado: ${{ env.ZIP_FILE }}"
            exit 1
          fi

      - name: Upload files to repository releases page
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ZIP_FILE }}
          name: ${{ env.ZIP_NAME }}
          tag_name: ${{ github.run_id }}
          body: |
            KernelSU NEXT
            Automatically compiled with Clang.
            Android 15 ready

      - name: Cleanup Swap
        if: always()
        run: |
          sudo swapoff /swapfile || true
          sudo rm -f /swapfile || true
